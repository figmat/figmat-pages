{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/limits/limits.component.ts","./src/app/limits/limits.component.html","./src/app/payment/payment.component.ts","./src/app/pricing/pricing.component.ts","./src/app/pricing/pricing.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'figmat-ui';\n}\n","\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {PricingComponent} from './pricing/pricing.component';\nimport {PaymentComponent} from './payment/payment.component';\nimport {LimitsComponent} from './limits/limits.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'pricing', component: PricingComponent },\n  { path: 'limits', component: LimitsComponent  },\n  { path: '**',   redirectTo: '/' },\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    PricingComponent,\n    PaymentComponent,\n    LimitsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonToggleModule,\n    MatGridListModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {HttpClient} from '@angular/common/http';\n\ninterface BillingData {\n  Sentences: number,\n  Symbols: number,\n  Figmatid: string\n}\n\n\ndeclare var Stripe: any;\ndeclare var registerElements: any;\n\n@Component({\n  selector: 'app-limits',\n  templateUrl: './limits.component.html',\n  styleUrls: ['./limits.component.scss'],\n\n})\nexport class LimitsComponent implements OnInit {\n\n  symbolsLim: number;\n  sentencesLim: number;\n  figmatid: string;\n  elements: any;\n  paymentValue: string;\n\n\n  constructor(private route: ActivatedRoute,\n              private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n\n      if (params['code']) {\n        this.http.post('/api/figma-limits',\n          {code: params['code']})\n          .subscribe((v: BillingData) => {\n            this.symbolsLim = v.Symbols;\n            this.sentencesLim = v.Sentences;\n            this.figmatid = v.Figmatid;\n          });\n      }\n    });\n\n    let stripe = Stripe('pk_test_51GwZIhASKhSlqpJrkussYAZhiIgcprlaCm6prJHGJO9spkr4tkKFNZPRevwp2jHzeVBZ390rmfkwst6aZaUqKeJ500zF6BJfXb');\n\n    // console.log(JSON.stringify(stripe));\n    this.elements = stripe.elements({locale: 'auto'});\n    // console.log(JSON.stringify(elements));\n    const card = this.elements.create('card', {});\n    card.mount('#card-element');\n\n\n    // registerElements([card], 'example1');\n  }\n\n  get limitsAvailable(): boolean {\n    return !this.figmatid;\n    // return false;\n  }\n\n  pay(a?) {\n    console.log(`+++`);\n  }\n\n  // @HostListener('card-element:change', ['$event'])\n  fun(){\n    console.log(`+++ fun`);\n  }\n}\n","<div>\n  <div>\n    <a routerLink=\"/\" routerLinkActive=\"active\">T4F</a>\n  </div>\n</div>\n\n<div class=\"container\">\n  <div class=\"row justify-content-center m-2\">\n    <h1>Limits</h1>\n  </div>\n\n\n  <div class=\"row m-2\">\n    <div class=\"col text-right\">\n      Sentence limit:\n    </div>\n    <div class=\"col\">\n      {{ limitsAvailable ? sentencesLim : \"Loading...\" }}\n    </div>\n  </div>\n  <div class=\"row m-2\">\n    <div class=\"col text-right\">\n      Symbols limit:\n    </div>\n    <div class=\"col\">\n      {{ limitsAvailable ? symbolsLim : \"Loading...\" }}\n    </div>\n  </div>\n\n  <div  class=\"row justify-content-center m-4\" [hidden]=\"!limitsAvailable\">\n\n    <mat-button-toggle-group name=\"amount\"\n                             [(ngModel)]=\"paymentValue\"\n                             aria-label=\"Payment amount\">\n      <mat-button-toggle value=\"p1\">$1 for 5000 symbols</mat-button-toggle>\n      <mat-button-toggle value=\"p3\">$3 for 25000 symbols</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n</div>\n\n\n<div class=\"payment-form-container\" [hidden]=\"!paymentValue\">\n  <form id=\"payment-form\">\n    <div id=\"card-element\"><!--Stripe.js injects the Card Element-->\n    </div>\n    <button id=\"submit\" disabled>\n      <div class=\"spinner hidden\" id=\"spinner\"></div>\n      <span id=\"button-text\">Confirm payment - temporally disable</span>\n    </button>\n    <p id=\"card-errors\" role=\"alert\"></p>\n    <p class=\"result-message hidden\">\n      Payment succeeded, see the result in your\n      <a href=\"\" target=\"_blank\">Stripe dashboard.</a> Refresh the page to pay again.\n    </p>\n  </form>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Element as StripeElement, Elements, ElementsOptions, StripeService} from \"ngx-stripe\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n\ndeclare var Stripe: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements OnInit {\n  elements: Elements;\n  card: StripeElement;\n  stripeTest: FormGroup;\n\n  elementsOptions: ElementsOptions = {\n    // locale: 'de'\n  };\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    // this.stripeTest = this.fb.group({\n    //   name: ['', [Validators.required]]\n    // });\n    // this.stripeService.elements(this.elementsOptions)\n    //   .subscribe(elements => {\n    //     this.elements = elements;\n    //     // Only mount the element the first time\n    //     if (!this.card) {\n    //       this.card = this.elements.create('card', {\n    //         style: {\n    //           base: {\n    //             iconColor: '#666EE8',\n    //             color: '#31325F',\n    //             lineHeight: '40px',\n    //             fontWeight: 300,\n    //             fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n    //             fontSize: '18px',\n    //             '::placeholder': {\n    //               color: '#CFD7E0'\n    //             }\n    //           }\n    //         }\n    //       });\n    //       this.card.mount('#card-element');\n    //     }\n    //   });\n  }\n\n  ngOnInit(): void {\n    let stripe = Stripe('pk_test_51GwZIhASKhSlqpJrkussYAZhiIgcprlaCm6prJHGJO9spkr4tkKFNZPRevwp2jHzeVBZ390rmfkwst6aZaUqKeJ500zF6BJfXb');\n\n    console.log(JSON.stringify(stripe));\n    let  elements = stripe.elements();\n    console.log(JSON.stringify(elements));\n\n\n  }\n\n  buy() {\n    // const stripeServiceInstance = this.stripeService;\n    fetch(\"/api/secret\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({})\n    })\n      .then(function(result) {\n        if (!result.ok) {\n          throw {};\n        }\n        // console.log(JSON.stringify(result.json()));\n        return result.json();\n      }).then(function (data) {\n      console.log(JSON.stringify(data));\n      // const stripe = Stripe(\"\");\n      // const elements = stripe.elements();\n\n      // stripeServiceInstance.confirmPaymentIntent(\n      //   data.clientSecret,\n      //   // {\n      //   //   payment_method: {\n      //   //     card: '',\n      //   //     billing_details: {\n      //   //       name: 'Jenny Rosen'\n      //   //     }\n      //   //   }\n      //\n      // );\n\n    }).catch(function () {\n      console.log(`catch`);\n    });\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.scss']\n})\nexport class PricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  on5kClick() {\n    console.log(\"5k click\");\n\n  }\n\n}\n","<div class=\"pricing-page vh-100\">\n\n  <div class=\"container\">\n\n    <div class=\"row pt-4\">\n      <a mat-button routerLink=\"/\" routerLinkActive=\"active\">\n        <span class=\"t\">T</span>\n        <span class=\"four\">4</span>\n        <span class=\"f\">F</span>\n      </a>\n\n    </div>\n  </div>\n\n  <div class=\"payments-section \">\n    <div class=\"w-100 text-center\">\n      <h1>Pricing</h1>\n    </div>\n    <!-- Display a payment form -->\n\n    <div class=\"card-section row justify-content-center\">\n\n      <div class=\"col-md\">\n\n        <div class=\"card p-2\">\n          <div class=\"card-title mx-auto\">\n            Starter\n          </div>\n          <div class=\"card-point mx-auto\">\n            Free\n          </div>\n          <div class=\"card-sub mx-auto p-2 \">\n            join and get\n            10000 symbols to use\n            for three months\n          </div>\n          <div class=\"mx-auto mt-auto\">\n            <a class=\"btn btn-outline-primary\"\n               href=\"https://www.figma.com/oauth?\nclient_id=juHRWNQfv5Pa1u2K6rRKVn&\nredirect_uri=https://figmat.com/limits&\nscope=file_read&\nstate=1&\nresponse_type=code\"\n               role=\"button\">\n              Join</a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md\">\n        <div class=\"card p-2\">\n          <div class=\"card-title mx-auto\">\n            Curious designer\n          </div>\n          <div class=\"card-point mx-auto\">\n            $1\n          </div>\n          <div class=\"card-sub\">\n            pay as you go\n            for 5000 symbols\n            to use for one month\n          </div>\n          <div class=\"mx-auto mt-auto\">\n            <a class=\"btn btn-outline-primary\"\n               href=\"https://www.figma.com/oauth?\nclient_id=juHRWNQfv5Pa1u2K6rRKVn&\nredirect_uri=https://figmat.com/limits&\nscope=file_read&\nstate=1&\nresponse_type=code\"\n               role=\"button\">\n              Select</a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md\">\n        <div class=\"card p-2\">\n          <div class=\"card-title mx-auto\">\n            Multilingual designer\n          </div>\n          <div class=\"card-point mx-auto\">\n            $3\n          </div>\n          <div class=\"card-sub\">\n            pay as you go\n            for 25000 symbols\n            to use for three months\n          </div>\n          <div class=\"mx-auto mt-auto\">\n            <a class=\"btn btn-outline-primary\"\n               href=\"https://www.figma.com/oauth?\nclient_id=juHRWNQfv5Pa1u2K6rRKVn&\nredirect_uri=https://figmat.com/limits&\nscope=file_read&\nstate=3&\nresponse_type=code\"\n               role=\"button\">\n              Select</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"container fixed-bottom\">\n    <div class=\"row \">\n      <a mat-button\n         class=\"ml-auto\"\n         href=\"mailto:contacts@figmat.com\">\n        Contact\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome-page vh-100\">\n\n  <div class=\"container\">\n\n    <div class=\"row pt-4\">\n      <a mat-button routerLink=\"/\" routerLinkActive=\"active\">\n        <span class=\"t\">T</span>\n        <span class=\"four\">4</span>\n        <span class=\"f\">F</span>\n      </a>\n      <div class=\"ml-auto \">\n        <a mat-button routerLink=\"/pricing\" routerLinkActive=\"active\">Pricing</a>\n\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n\n      <h1>Translator for Figma</h1>\n    </div>\n    <div class=\"row justify-content-center m-2\">\n      <div>Add seamless translation experience to your design tool</div>\n    </div>\n    <div class=\"row justify-content-center m-2\">\n\n      <a mat-button\n         color=\"accent\"\n         class=\"install-button\"\n         href=\"https://www.figma.com/community\">Install the plugin</a>\n    </div>\n\n    <div class=\"row how-to-section\">\n      <div class=\"how-to-box w-100\">\n        How it works\n      </div>\n    </div>\n\n  </div>\n\n\n  <div class=\"container fixed-bottom\">\n      <div class=\"row \">\n        <a mat-button\n           class=\"ml-auto\"\n           href=\"mailto:contacts@figmat.com\">\n          Contact\n        </a>\n      </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}